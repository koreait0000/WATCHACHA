<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.wachacha.user.UserMapper">

    <insert id="join">
        INSERT INTO t_user
            ( email, pw, nm, tel, grade, provider, authCd )
        VALUES
            ( #{email}, #{pw}, #{nm}, #{tel}, #{grade}, #{provider}, #{authCd} )
    </insert>

    <select id="followerGetMovieFav" resultType="MovieFavEntity">
        select * from t_movie_fav tmf
        where tmf.iuser in (<foreach collection="list" item="item" separator=",">
                #{item}
    </foreach>)
    </select>

    <select id="selFollow" resultType="Integer">
        select tuf.to_iuser from t_user tu
        inner join t_user_follow tuf
        on tu.iuser = tuf.from_iuser
        where tu.iuser = #{iuser}
    </select>

    <select id="selUser" resultType="UserEntity">
        SELECT * FROM t_user
        WHERE
        <if test="email != null">
            email = #{email}
        </if>
        <if test="nm != null">
            nm like concat('%',#{nm},'%')
        </if>
        <if test="provider != null">
            AND provider = #{provider}
        </if>
    </select>

    <update id="updateAuth">
        update t_user set authCd = null where email = #{email}
    </update>

    <update id="editPw">
        update t_user set pw = #{pw} where email = #{email} and provider = "local"
    </update>
    <update id="updUser">
        UPDATE t_user
        <set>
            <if test="mainProfile != null and mainProfile != '' ">
                mainProfile = #{mainProfile}
            </if>
            <if test="pw != null and pw != '' ">
                , pw = #{pw}
            </if>
            <if test="nm != null and nm != '' ">
                , nm = #{nm}
            </if>
        </set>
        WHERE iuser = #{iuser}
    </update>
    <update id="updUserMainProfile">
        UPDATE t_user A
        SET A.mainProfile = #{mainProfile}
        WHERE A.iuser = #{iuser}
        <selectKey order="AFTER" resultType="String" keyColumn="mainProfile" keyProperty="mainProfile">
            SELECT mainProfile FROM t_user WHERE iuser = #{iuser}
        </selectKey>
    </update>


    <!-- follow -->
    <insert id="insFollow">
        INSERT INTO t_user_follow
            (from_iuser, to_iuser)
            VALUES
            (${from_iuser}, ${to_iuser})
    </insert>
    <select id="isFollow" resultType="UserFollowEntity">
        SELECT (SELECT COUNT(*) FROM t_user_follow WHERE from_iuser = ${from_iuser} AND to_iuser = ${to_iuser}) AS from_iuser
            , (SELECT COUNT(*) FROM t_user_follow WHERE to_iuser = ${from_iuser} AND from_iuser = ${to_iuser}) AS to_iuser
    </select>
    <select id="selFollower" resultType="UserDomain">
        SELECT B.*
        FROM t_user_follow A
        INNER JOIN t_user B
        ON A.from_iuser = B.iuser
        WHERE A.to_iuser = ${iuser}
    </select>
    <select id="selFollowing" resultType="UserDomain">
        SELECT B.*
        FROM t_user_follow A
        INNER JOIN t_user B
        ON A.to_iuser = B.iuser
        WHERE A.from_iuser = ${iuser}
    </select>
    <delete id="delFollow">
        DELETE FROM t_user_follow
        WHERE from_iuser = ${from_iuser} AND to_iuser = ${to_iuser}
    </delete>

    <!-- MyList -->
    <insert id="insMyMovie">
        INSERT INTO t_movie_fav
            (iuser, title, image, nation, genre)
        VALUES
            (${iuser}, #{title}, #{image}, #{nation}, #{genre})
    </insert>
    <select id="selMyMovie" resultType="MovieFavDomain">
        SELECT A.*, B.nm
        FROM t_movie_fav A
        INNER JOIN t_user B
        ON A.iuser = B.iuser
        WHERE A.iuser = ${user.iuser}
        ORDER BY i_movie_fav DESC
        <if test="page.nation != null">
            AND A.nation = #{page.nation}
        </if>
        <if test="page.genre != null">
            AND A.genre = #{page.genre}
        </if>
        <if test="page.searchText != null">
            AND A.title LIKE CONCAT('%', #{page.searchText}, '%')
        </if>
        LIMIT ${page.minIndex}, ${page.listLength}
    </select>
    <select id="selUserMovieFavOrder" resultType="UserEntity">
        SELECT iuser
        FROM t_movie_fav A
        INNER JOIN t_user_follow B
        ON A.iuser = B.to_iuser
        WHERE B.from_iuser = ${iuser}
        GROUP BY A.iuser
        ORDER BY MAX(i_movie_fav) DESC
        LIMIT 3;
    </select>
    <delete id="delMyMovie">
        DELETE FROM t_movie_fav
        WHERE iuser = ${iuser} AND title = #{title}
    </delete>

    <update id="resetProfile">
        update t_user
        set mainprofile = null
        where iuser = #{iuser}
    </update>

      

</mapper>